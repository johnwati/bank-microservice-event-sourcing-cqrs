version: "3.4"

services:
  zookeeper:
    image: bitnami/zookeeper
    restart: always
    ports:
      - "2181:2181"
    volumes:
      - "zookeeper_data:/bitnami"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
  # akhq:
    build:
      context: .
    # image: tchiotludo/akhq
    # environment:
      # AKHQ_CONFIGURATION: |
        # akhq:
          # connections:
            # docker-kafka-server:
              # properties:
                # bootstrap.servers: "kafka:9092"
              # schema-registry:
                # url: "http://schema-registry:8085"
              # connect:
                # - name: "connect"
                  # url: "http://connect:8083"
    # ports:
      # - 8080:8080
    # links:
      # - kafka
      # - schema-registry
  # schema-registry:
    # image: confluentinc/cp-schema-registry
    # depends_on:
      # - kafka
    # environment:
      # SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'PLAINTEXT://kafka:9092'
      # SCHEMA_REGISTRY_HOST_NAME: 'schema-registry'
      # SCHEMA_REGISTRY_LISTENERS: 'http://0.0.0.0:8085'
      # SCHEMA_REGISTRY_LOG4J_ROOT_LOGLEVEL: 'INFO'

  kafka:
    image: bitnami/kafka
    ports:
      - "9092:9092"
    restart: always
    volumes:
      - "kafka_data:/bitnami"
    environment:
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_LISTENERS=PLAINTEXT://:9092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
    depends_on:
      - zookeeper
  mysql:
    image: mysql:latest
    ports:
      - "3307:3306"
    restart: always
    volumes:
      - mysql_data_conatiner:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=techbanknetRootPsw
# docker run -it -d --name mysql-container -p 3306:3306 --network techbanknet -e MYSQL_ROOT_PASSWORD=techbanknetRootPsw --restart always -v mysql_data_conatiner:/var/lib/mysql mysql:latest
  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080
  db:
    image: mysql:5.6
    restart: always
    ports:
      - "3308:3306"
    environment:
      MYSQL_ROOT_PASSWORD: techbanknetRootPsw
  # docker run -it -d --name mongo-containet -p 27017:27017 --network techbanknet --restart always -v mongo_data_container:/data/db mongo:latest
  mongo:
    image: mongo
    restart: always
    ports:
      - 27017:27017
    volumes:
      - mongo_data_container:/data/db mongo:latest
    # networks:
      # - techbankNet
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/
volumes:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local
  mysql_data_conatiner:
    driver: local
  mongo_data_container:
    driver: local
   
networks:
  default:
    external:
      name: techbankNet
